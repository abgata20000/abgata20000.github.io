<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[AB Lab]]></title>
  <link href="http://blog.abgata.org/atom.xml" rel="self"/>
  <link href="http://blog.abgata.org/"/>
  <updated>2014-05-27T09:53:37+09:00</updated>
  <id>http://blog.abgata.org/</id>
  <author>
    <name><![CDATA[abgata20000]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[RailsのScaffoldのテンプレートをカスタマイズする]]></title>
    <link href="http://blog.abgata.org/blog/2014/05/27/rails_scaffold_template/"/>
    <updated>2014-05-27T17:50:00+09:00</updated>
    <id>http://blog.abgata.org/blog/2014/05/27/rails_scaffold_template</id>
    <content type="html"><![CDATA[<h2>Scaffoldで生成されるテンプレートをSlimに変更する</h2>

<p>Railsの<strong>Scaffold</strong>を使う際にテンプレートを<strong>slim</strong>で、</p>

<p>生成してさらに中身をカスタマイズできるようにしたくなったのでいろいろ調べてみました。</p>

<p>テンプレートエンジンを<strong>slim</strong>に変更するのは、簡単そうです。</p>

<p>Gemfileに <code>gem &#39;slim-rails&#39;</code> を追加して <code>bundle install</code> を実行して、</p>

<p><code>config/application.rb</code>に</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>config.generators do |g|
</span><span class='line'>  g.template_engine :slim
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>

<p>を追加するだけで出来ました。</p>

<p><img src="https://abgata.s3-ap-northeast-1.amazonaws.com/6447d37569b96333c8981ebcab978d70.png" alt="img"></p>

<h2>さらに、これの中身をカスタマイズしたい</h2>

<p>参考サイト: <a href="http://qiita.com/labocho/items/387e7592b8e388fd9ca5">rails g scaffold のカスタマイズ</a></p>

<p>現在利用しているテンプレートのコピーを作成します</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake rails:templates:copy</span></code></pre></td></tr></table></div></figure>

<p>これで <code>lib/templates</code> が生成されます</p>

<p><code>lib/.template/scaffold</code> 作成して、</p>

<p><code>index.html.erb</code> などのテンプレートファイルを作成すれば</p>

<p><code>rails g scaffold</code> 時に反映されるようです。</p>

<h3>テンプレートのカスタマイズもSlimで書きたい</h3>

<p>デフォルトでは、テンプレートエンジンは <code>erb</code> になっています。</p>

<p>このままでも良かったのですが、折角なので、</p>

<p>テンプレートのカスタマイズも<strong>slim</strong>で出来るようにしました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rails g generator slim/scaffold</span></code></pre></td></tr></table></div></figure>

<p>で、<code>lib/generators/slim/scaffold</code> が生成されます。</p>

<p>生成されたフォルダ内の</p>

<p><code>scaffold_generator.rb</code></p>

<p>を編集します。</p>

<h5>scaffold_generator.rb</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>require "rails/generators/erb/scaffold/scaffold_generator"
</span><span class='line'>class Slim::ScaffoldGenerator &lt; Erb::Generators::ScaffoldGenerator
</span><span class='line'>  source_root File.expand_path('../templates', __FILE__)
</span><span class='line'>
</span><span class='line'>  protected
</span><span class='line'>  def handler
</span><span class='line'>    :slim
</span><span class='line'>  end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>

<p>これで、scaffold時に <code>lib/generators/slim/scaffold/template</code> 内のファイルが利用されるようになります。</p>

<h5>index.html.slim</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>h1
</span><span class='line'>  | &lt;%= plural_table_name %&gt;
</span><span class='line'>
</span><span class='line'>table class=("table table-boderd table-striped table-hover")
</span><span class='line'>  thead
</span><span class='line'>    tr
</span><span class='line'>&lt;% attributes.reject(&:password_digest?).each do |attribute| -%&gt;
</span><span class='line'>      th &lt;%= attribute.human_name %&gt;
</span><span class='line'>&lt;% end -%&gt;
</span><span class='line'>      th
</span><span class='line'>      th
</span><span class='line'>      th
</span><span class='line'>
</span><span class='line'>  tbody
</span><span class='line'>    - @&lt;%= plural_table_name %&gt;.each do |&lt;%= singular_table_name %&gt;|
</span><span class='line'>      tr
</span><span class='line'>&lt;% attributes.reject(&:password_digest?).each do |attribute| -%&gt;
</span><span class='line'>        td= &lt;%= singular_table_name %&gt;.&lt;%= attribute.name %&gt;
</span><span class='line'>&lt;% end -%&gt;
</span><span class='line'>        td= link_to 'Show', &lt;%= singular_table_name %&gt;, :class =&gt; 'btn btn-info'
</span><span class='line'>        td= link_to 'Edit', edit_&lt;%= singular_table_name %&gt;_path(&lt;%= singular_table_name %&gt;), :class =&gt; 'btn btn-success'
</span><span class='line'>        td
</span><span class='line'>          = link_to('Destroy',
</span><span class='line'>            &lt;%= singular_table_name %&gt;,
</span><span class='line'>            method: :delete,
</span><span class='line'>            :remote =&gt; true,
</span><span class='line'>            :onclick =&gt; 'if(window.confirm("are you sure?")){$(this).closest("tr").fadeOut()}',
</span><span class='line'>            data: {},
</span><span class='line'>            :class =&gt; 'btn btn-danger')
</span></code></pre></td></tr></table></div></figure>

<p>こんな感じですね。</p>

<p>ちょっとハマったのは、</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;% attributes.reject(&:password_digest?).each do |attribute| -%&gt;
</span><span class='line'>      th &lt;%= attribute.human_name %&gt;
</span><span class='line'>&lt;% end -%&gt;</span></code></pre></td></tr></table></div></figure>

<p>のようなscaffold時に生成される箇所にインデントがあると、</p>

<p>生成されたslimファイルのインデントがおかしくなるという点です。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>tbody
</span><span class='line'>  - @&lt;%= plural_table_name %&gt;.each do |&lt;%= singular_table_name %&gt;|
</span><span class='line'>    tr
</span><span class='line'>      &lt;% attributes.reject(&:password_digest?).each do |attribute| -%&gt;
</span><span class='line'>      td= &lt;%= singular_table_name %&gt;.&lt;%= attribute.name %&gt;
</span><span class='line'>      &lt;% end -%&gt;
</span></code></pre></td></tr></table></div></figure>

<p>のように記述すると</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>tr
</span><span class='line'>    td
</span></code></pre></td></tr></table></div></figure>

<p>とインデントが余分に入ってしまいました。</p>

<h2>折角なのでcontrollerとmodelもカスタマイズする</h2>

<p>controllerは、<code>lib/templates/rails/scaffold_controller/controller.rb</code>を編集すればいいようです。</p>

<p>このファイルは、最初に実行した</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake rails:templates:copy</span></code></pre></td></tr></table></div></figure>

<p>で生成されていました。</p>

<p>modelは、<code>lib/templates/active_record/model/model.rb</code>を作成する必要があります。</p>

<p>サンプルは、</p>

<h5>ruby:model.rb</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;% module_namespacing do -%&gt;
</span><span class='line'>class &lt;%= class_name %&gt; &lt; &lt;%= parent_class_name.classify %&gt;
</span><span class='line'>&lt;% attributes.select {|attr| attr.reference? }.each do |attribute| -%&gt;
</span><span class='line'>  belongs_to :&lt;%= attribute.name %&gt;&lt;%= ', polymorphic: true' if attribute.polymorphic? %&gt;
</span><span class='line'>&lt;% end -%&gt;
</span><span class='line'>&lt;% if !accessible_attributes.empty? -%&gt;
</span><span class='line'>  # attr_accessible &lt;%= accessible_attributes.map {|a| ":#{a.name}" }.sort.join(', ') %&gt;
</span><span class='line'>&lt;% else -%&gt;
</span><span class='line'>  # attr_accessible :title, :body # rails4 だとエラー出ます
</span><span class='line'>&lt;% end -%&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  def to_s
</span><span class='line'>    &lt;%- if attributes.map{ |a| a.name }.include?('name') -%&gt;
</span><span class='line'>    name
</span><span class='line'>    &lt;%- else -%&gt;
</span><span class='line'>    "&lt;%= class_name %&gt; #{id}"
</span><span class='line'>    &lt;%- end -%&gt;
</span><span class='line'>  end
</span><span class='line'>
</span><span class='line'>end
</span><span class='line'>&lt;% end -%&gt;
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>

<p>こんな感じです。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rails g scaffold sample name comment:text</span></code></pre></td></tr></table></div></figure>

<p><img src="https://abgata.s3-ap-northeast-1.amazonaws.com/44c06e14945c626cc741f6a04dac0314.png" alt="img"></p>

<p>で生成されるファイルが変更されたのを確認できます。</p>

<p>さて、どんなテンプレートにしようかな。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Expressを使ってみる（Jade、LESS、CoffeeScript）]]></title>
    <link href="http://blog.abgata.org/blog/2014/05/25/express_install/"/>
    <updated>2014-05-25T09:00:00+09:00</updated>
    <id>http://blog.abgata.org/blog/2014/05/25/express_install</id>
    <content type="html"><![CDATA[<h2>npmでグローバルにインストール</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>npm install -g express</span></code></pre></td></tr></table></div></figure>

<h2>express コマンドを実行してみる</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>express myApp</span></code></pre></td></tr></table></div></figure>

<p><img src="https://abgata.s3-ap-northeast-1.amazonaws.com/957b8eafae631c6b5dbea76723b6526e.png" alt="img"></p>

<p>そんなものはないと怒られる。</p>

<p>少し調べてみた結果、express コマンドには <strong>express-generator</strong> が必要らしい</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>npm install -g express-generator</span></code></pre></td></tr></table></div></figure>

<p>再チャレンジしてみる</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>express myApp</span></code></pre></td></tr></table></div></figure>

<p><img src="https://abgata.s3-ap-northeast-1.amazonaws.com/58413184a08641c9fbfbceb588d6978e.png" alt="img"></p>

<p>できた。</p>

<h2>expressを起動してみる</h2>

<p>まずは設定</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd myApp
</span><span class='line'>npm install
</span><span class='line'>node app</span></code></pre></td></tr></table></div></figure>

<p>あれ、何も起きない。。。</p>

<p>起動ファイルが、 app.js ではなく、 bin/www らしい</p>

<p>package.json の start コマンドに設定されていた。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>npm start</span></code></pre></td></tr></table></div></figure>

<p><img src="https://abgata.s3-ap-northeast-1.amazonaws.com/2a50a3c8a93be254d87363329362f689.png" alt="img"></p>

<p>できた。</p>

<h2>CSSをLESSで書きたい</h2>

<p>html の テンプレートエンジンはデフォルトで jade だったので、</p>

<p>このまま使うとして CSS は LESS を使いたいと言うことで、</p>

<p><a href="https://github.com/emberfeather/less.js-middleware">less.js-middleware</a></p>

<p>を設定してみた。</p>

<p>まずは、npmでインストール</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>npm install less-middleware --save</span></code></pre></td></tr></table></div></figure>

<p>次に設定ファイルを変更</p>

<h5>app.js</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// use css engine less
</span><span class='line'>var lessMiddleware = require('less-middleware');
</span><span class='line'>
</span><span class='line'>app.use(lessMiddleware(
</span><span class='line'>  path.join(__dirname, 'public')
</span><span class='line'>));
</span></code></pre></td></tr></table></div></figure>

<h5>public/stylesheets/style.less</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>h1{
</span><span class='line'>  color: green;
</span><span class='line'>}
</span><span class='line'>#main
</span><span class='line'>{
</span><span class='line'>  color:#FFF;
</span><span class='line'>  #sub{
</span><span class='line'>    color:#666;
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>

<p>アクセスしてみる</p>

<p><img src="https://abgata.s3-ap-northeast-1.amazonaws.com/e807c53a7d054e9d138fbc66bff761c3.png" alt="img"></p>

<p>できた。</p>

<p><strong>が</strong>、</p>

<p>これだと、public/stylesheets にlessファイル置かないといけないので</p>

<p>lessファイルの配置場所を変更</p>

<h5>app.js</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// use css engine less
</span><span class='line'>var lessMiddleware = require('less-middleware');
</span><span class='line'>
</span><span class='line'>app.use(lessMiddleware(
</span><span class='line'>  path.join(__dirname, 'assets'),
</span><span class='line'>  {
</span><span class='line'>    dest: path.join(__dirname, 'public')
</span><span class='line'>  }
</span><span class='line'>));</span></code></pre></td></tr></table></div></figure>

<p>これで asets/stylesheets にless ファイルを配置すればOK</p>

<h2>CoffeeScriptで記述できるようにしたい</h2>

<p>参考 <a href="http://qiita.com/koki_cheese/items/4cbacecf293f5c869be2">express.js 4をCoffeeScriptで開発できるようにする</a></p>

<p>coffee-script と js2coffee をインストールする</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>npm install -g coffee-script js2coffee</span></code></pre></td></tr></table></div></figure>

<p>jsファイルをcoffeescriptに変換</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>find . -type f -name "*.js" | while read f; do js2coffee "$f" &gt; "${f%.*}.coffee"; done</span></code></pre></td></tr></table></div></figure>

<p>ここで大量のエラーが。</p>

<p><strong>node_modules</strong>の中身にまで変換かけているっぽいですね。</p>

<p>スクリプト修正しようかと思ったが、</p>

<p>既にわけがわからなくなっているので、</p>

<p>復習も兼ねて、最初から作り直すことに</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>express myApp
</span><span class='line'>cd myApp</span></code></pre></td></tr></table></div></figure>

<p>で <code>npm install</code> をする前に</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>find . -type f -name "*.js" | while read f; do js2coffee "$f" &gt; "${f%.*}.coffee"; done</span></code></pre></td></tr></table></div></figure>

<p>今度は大丈夫みたいです。</p>

<p>jsファイルを削除</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>find . -type f -name "*.js" | xargs rm -f</span></code></pre></td></tr></table></div></figure>

<p>ここで</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>npm install
</span><span class='line'>npm install coffee-script --save</span></code></pre></td></tr></table></div></figure>

<p>スタートアップファイルを編集</p>

<h5>bin/www の先頭に以下を追記</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>require('coffee-script/register');</span></code></pre></td></tr></table></div></figure>

<p>実行してみる</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>npm start</span></code></pre></td></tr></table></div></figure>

<p><img src="https://abgata.s3-ap-northeast-1.amazonaws.com/2f7005395707093b773b7be923e285f0.png" alt="img"></p>

<p>できた</p>

<h2>外部ファイルもCoffeeScriptで書きたい</h2>

<p>あとは、 public/javascripts のファイルもCoffeeScriptで書けるようになれば、</p>

<p>やりたいことは叶いますね。</p>

<p><a href="https://www.npmjs.org/package/coffee-middleware">coffee-middleware</a> がよさそうなのでインストールしてみる</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>npm install coffee-middleware --save</span></code></pre></td></tr></table></div></figure>

<p>設定ファイルを編集</p>

<h5>app.coffee</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># use coffeescript
</span><span class='line'>coffeeMiddleware = require('coffee-middleware')
</span><span class='line'>
</span><span class='line'>app.use coffeeMiddleware(
</span><span class='line'>  src: path.join(__dirname, "public")
</span><span class='line'>  compress: true
</span><span class='line'>  bare: true
</span><span class='line'>)</span></code></pre></td></tr></table></div></figure>

<p>CoffeeScriptのファイルを配置してみる</p>

<h5>public/main.coffee</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>alert 'main coffee'</span></code></pre></td></tr></table></div></figure>

<p>実行してみる</p>

<p><img src="https://abgata.s3-ap-northeast-1.amazonaws.com/9e17666badefe5abe6146f4ed979967f.png" alt="img"></p>

<p>できた。</p>

<p>とりあえず、</p>

<p>やりたいことは、出来るようになったので満足なのですが、</p>

<p>実際の運用を考えたら、</p>

<p>html はともかく</p>

<p>js や css は、</p>

<p>毎回expressで生成するのもどうかというわけで、</p>

<p>多分 <strong>grunt</strong> を使うことになるだろうなと思いました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MacBookPro が頻繁にフリーズするのでディスクを修正してみた]]></title>
    <link href="http://blog.abgata.org/blog/2014/05/20/mac_disk_recover/"/>
    <updated>2014-05-20T19:10:00+09:00</updated>
    <id>http://blog.abgata.org/blog/2014/05/20/mac_disk_recover</id>
    <content type="html"><![CDATA[<h2>MacBookPro Early 2013</h2>

<p>ディスクユーティリティで <strong>ディスクを検証</strong> をクリック</p>

<p><img src="https://abgata.s3-ap-northeast-1.amazonaws.com/bdbb85050a068740ccbe117e7ac18115.png" alt="ディスクユーティリティ"></p>

<p>待つこと数分、</p>

<p>「ディスクが壊れているのでRecorvery HD でディスクを修復してください」といった感じのメッセージが出てきた。</p>

<p>再起動してappleマークが表示されている間 <strong>cmd + R</strong> を長押しして
ディスクユーティリティを選択</p>

<p>ディスクを検証して、エラーが出たら、ディスクを修正</p>

<p>10分強くらいでディスクが修正されました。</p>

<p>これで治ったらいいな。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vagrant共有フォルダをnfsを使って高速化する]]></title>
    <link href="http://blog.abgata.org/blog/2014/05/16/vagrant-nfs/"/>
    <updated>2014-05-16T06:57:00+09:00</updated>
    <id>http://blog.abgata.org/blog/2014/05/16/vagrant-nfs</id>
    <content type="html"><![CDATA[<p>先日、Vagrantの共有フォルダがデフォルト設定だと遅くて使いものにならないという話を聞き、nfsを使って高速化してみた時の話</p>

<p>nfsd が起動しているかを確認</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo nfsd status</span></code></pre></td></tr></table></div></figure>

<p>起動していなければ起動する
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo nfsd enable</span></code></pre></td></tr></table></div></figure></p>

<p>/etc/exports が必要らしいので作成</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo touch /etc/exports</span></code></pre></td></tr></table></div></figure>

<p>あとは、設定ファイルで :type に nfs を指定するだけでよさそう</p>

<h5>Vagrantfile</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>config.vm.synced_folder ".", "/vagrant", type: "nfs", :mount_options  =&gt; ['nolock,vers=3,udp']</span></code></pre></td></tr></table></div></figure>

<p>簡単ですね。</p>

<p>と思ったのですが</p>

<p>マウント時に何やらエラーが出ているみたいです。</p>

<p><img src="https://abgata.s3-ap-northeast-1.amazonaws.com/d7c5eaf52263d75ba0386a4397a8a9be.png" alt="error"></p>

<p>rpc.statd を起動させるか オプションで nolockを指定しろと言っているみたいなので、</p>

<p>マウント時のオプションに nolock 渡すようにしたら出来ました。 </p>

<h5>Vagrantfile</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>config.vm.synced_folder ".", "/vagrant", type: "nfs", :mount_options  =&gt; ['nolock,vers=3,udp']</span></code></pre></td></tr></table></div></figure>

<p>確かになん速い気がします。</p>

<p>今度計測してみよう。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vagrantでpackage作成した際にVirtualBoxのVersionが異なる場合の対処法]]></title>
    <link href="http://blog.abgata.org/blog/2014/05/02/vagrant-packege-vb_version_diff/"/>
    <updated>2014-05-02T01:58:00+09:00</updated>
    <id>http://blog.abgata.org/blog/2014/05/02/vagrant-packege-vb_version_diff</id>
    <content type="html"><![CDATA[<h3>そもそも Vagrant 使おうと思いたった経緯</h3>

<p>以前 <a href="http://dotinstall.com">ドットインストール</a> さんにレッスンがあったので</p>

<p>試してみたことはあったのですが、</p>

<p>自分の環境で利用している「pallarels desctop」と相性が悪いのか、</p>

<p>同時に立ち上げるとMacが落ちるという現象があったため利用はしていなかったのです。</p>

<p>がしかし</p>

<p>先日アホなミスをしてしまい、Macを初期化するハメになってしまい、</p>

<p>データや環境の復旧はだいたいできたのですが、</p>

<p>Rubyの環境がどうしてもうまく構築できなくなってしまったため、</p>

<p>これまで、スクリプトの実行をMacで行っていたのを</p>

<p>「Vagrant」を使って仮想環境を構築してそこで実行するようにしようと思いったたのがことのはじめです。</p>

<h3>vagrant の box を作成してみる</h3>

<p>折角環境を作ったのでboxを作ってみました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant package</span></code></pre></td></tr></table></div></figure>

<p>少し時間はかかりましたが問題なく package.box が生成されました。</p>

<p>生成された package.box を vagrant に登録して</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant box add myImage package.box
</span></code></pre></td></tr></table></div></figure>

<h5>Vagrantfile</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>config.vm.box = "myImage"</span></code></pre></td></tr></table></div></figure>

<p>新しく仮想環境を作成してみようとした所、エラーが発生してしまいました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant up</span></code></pre></td></tr></table></div></figure>

<p><img src="https://abgata.s3-ap-northeast-1.amazonaws.com/8f79b7a3b5a86bb518825b25f0dee47c.png" alt="エラー"></p>

<p>仮想環境自体は作成されて ssh接続は出来るのですが、どうやら共有フォルダがマウントされていないようです。</p>

<h3>共有フォルダを利用できるようにする</h3>

<p>少し調べていた結果、
VirtualBox のバージョンがbox作成時と現在とで異なっているのが原因らしいです。</p>

<p><a href="http://qiita.com/harapeko_wktk/items/72985bfccaae60c69384">Vagrantの共有ディレクトリ設定でものすっごい躓いた！</a>
を参考に問題を解決してみることに</p>

<h4>VirtualBoxのバージョン違いを解決するプラグインをインストールする</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant plugin install vagrant-vbguest
</span><span class='line'>vi ~/.vagrant.d/Vagrantfile</span></code></pre></td></tr></table></div></figure>

<h5>javascript:~/.vagrant.d/Vagrantfile</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">Vagrant</span><span class="p">.</span><span class="nx">configure</span><span class="p">(</span><span class="s2">&quot;2&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="nx">config</span><span class="o">|</span>
</span><span class='line'>  <span class="nx">config</span><span class="p">.</span><span class="nx">vbguest</span><span class="p">.</span><span class="nx">auto_update</span> <span class="o">=</span> <span class="kc">false</span>
</span><span class='line'><span class="nx">end</span>
</span></code></pre></td></tr></table></div></figure>

<p>バージョンが異なっているかどうかを確認
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">vagrant</span> <span class="nx">vbguest</span> <span class="o">--</span><span class="nx">status</span>
</span><span class='line'>
</span><span class='line'> <span class="nx">GuestAdditions</span> <span class="nx">versions</span> <span class="nx">on</span> <span class="nx">your</span> <span class="nx">host</span> <span class="p">(</span><span class="mf">4.3</span><span class="p">.</span><span class="mi">10</span><span class="p">)</span> <span class="nx">and</span> <span class="nx">guest</span> <span class="p">(</span><span class="mf">4.2</span><span class="p">.</span><span class="mi">16</span><span class="p">)</span> <span class="k">do</span> <span class="nx">not</span> <span class="nx">match</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>やはりバージョンが違うらしい</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">vagrant</span> <span class="nx">vbguest</span> <span class="o">--</span><span class="nx">auto</span><span class="o">-</span><span class="nx">reboot</span>
</span></code></pre></td></tr></table></div></figure>

<p>で修正してくれるらしいので実行してみた。</p>

<p>無事終了したっぽいので確認</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">vagrant</span> <span class="nx">vbguest</span> <span class="o">--</span><span class="nx">status</span>
</span><span class='line'>
</span><span class='line'><span class="nx">GuestAdditions</span> <span class="mf">4.3</span><span class="p">.</span><span class="mi">10</span> <span class="nx">running</span> <span class="o">---</span> <span class="nx">OK</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure>

<p>解決したらしい。</p>

<p>Vagrant をリブートしてみる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">v</span> <span class="nx">reload</span>
</span><span class='line'><span class="o">~~~</span>
</span><span class='line'><span class="o">==&gt;</span> <span class="k">default</span><span class="o">:</span> <span class="nx">Configuring</span> <span class="nx">and</span> <span class="nx">enabling</span> <span class="nx">network</span> <span class="nx">interfaces</span><span class="p">...</span>
</span><span class='line'><span class="nx">The</span> <span class="nx">following</span> <span class="nx">SSH</span> <span class="nx">command</span> <span class="nx">responded</span> <span class="kd">with</span> <span class="nx">a</span> <span class="nx">non</span><span class="o">-</span><span class="nx">zero</span> <span class="nx">exit</span> <span class="nx">status</span><span class="p">.</span>
</span><span class='line'><span class="nx">Vagrant</span> <span class="nx">assumes</span> <span class="nx">that</span> <span class="k">this</span> <span class="nx">means</span> <span class="nx">the</span> <span class="nx">command</span> <span class="nx">failed</span><span class="o">!</span>
</span><span class='line'>
</span><span class='line'><span class="nx">ARPCHECK</span><span class="o">=</span><span class="nx">no</span> <span class="o">/</span><span class="nx">sbin</span><span class="o">/</span><span class="nx">ifup</span> <span class="nx">eth1</span> <span class="mi">2</span><span class="o">&gt;</span> <span class="err">/dev/null</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Stdout</span> <span class="nx">from</span> <span class="nx">the</span> <span class="nx">command</span><span class="o">:</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Device</span> <span class="nx">eth1</span> <span class="nx">does</span> <span class="nx">not</span> <span class="nx">seem</span> <span class="nx">to</span> <span class="nx">be</span> <span class="nx">present</span><span class="p">,</span> <span class="nx">delaying</span> <span class="nx">initialization</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nx">Stderr</span> <span class="nx">from</span> <span class="nx">the</span> <span class="nx">command</span><span class="o">:</span>
</span></code></pre></td></tr></table></div></figure>

<p>ダメみたい。</p>

<p>IPアドレスがうまく振り当てられていないみたいなので、</p>

<p><a href="https://github.com/mitchellh/vagrant/issues/3341">ここ</a>を参考に少し修正してみる</p>

<p>Vagrant にSSH接続して後に</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">sudo</span> <span class="nx">ln</span> <span class="o">-</span><span class="nx">s</span> <span class="o">/</span><span class="nx">opt</span><span class="o">/</span><span class="nx">VBoxGuestAdditions</span><span class="o">-</span><span class="mf">4.3</span><span class="p">.</span><span class="mi">10</span><span class="o">/</span><span class="nx">lib</span><span class="o">/</span><span class="nx">VBoxGuestAdditions</span> <span class="o">/</span><span class="nx">usr</span><span class="o">/</span><span class="nx">lib</span><span class="o">/</span><span class="nx">VBoxGuestAdditions</span>
</span><span class='line'><span class="nx">sudo</span> <span class="nx">ln</span> <span class="o">-</span><span class="nx">s</span> <span class="o">/</span><span class="nx">opt</span><span class="o">/</span><span class="nx">VBoxGuestAdditions</span><span class="o">-</span><span class="mf">4.3</span><span class="p">.</span><span class="mi">10</span><span class="o">/</span><span class="nx">lib</span><span class="o">/</span><span class="nx">VBoxGuestAdditions</span> <span class="o">/</span><span class="nx">usr</span><span class="o">/</span><span class="nx">lib64</span><span class="o">/</span><span class="nx">VBoxGuestAdditions</span>
</span></code></pre></td></tr></table></div></figure>

<p>を実行</p>

<p>リブートしてみる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">vagrant</span> <span class="nx">reload</span>
</span></code></pre></td></tr></table></div></figure>

<p>解決した。</p>

<p>なかなか大変でした。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[wheneverでRailsのタスクをcronで実行する]]></title>
    <link href="http://blog.abgata.org/blog/2014/04/28/whenever/"/>
    <updated>2014-04-28T09:00:00+09:00</updated>
    <id>http://blog.abgata.org/blog/2014/04/28/whenever</id>
    <content type="html"><![CDATA[<h3>参考サイト</h3>

<ul>
<li><a href="http://higelog.brassworks.jp/?p=1548">WheneverでRailsのバッチ処理</a></li>
</ul>

<h2>登録内容の確認</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bundle exec whenever</span></code></pre></td></tr></table></div></figure>

<p>を実行するとcrontabの内容をコンソール出力。
この時点ではまだcrontabに登録されてはいない。</p>

<h2>Crontabへ登録</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bundle exec whenever --update-crontab</span></code></pre></td></tr></table></div></figure>

<p>–update-crontabオプションをつけるとcrontabに登録する。
Whenever以外で登録されていたジョブが上書きされることはない。</p>

<h2>Crontabから削除</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bundle exec whenever --clear-crontab</span></code></pre></td></tr></table></div></figure>

<p>Cronを止めたい場合は–clear-crontabですべて削除。
登録の場合と同様にWhenever管理外のジョブが削除されることはない。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Webminをインストール]]></title>
    <link href="http://blog.abgata.org/blog/2014/04/28/webmin_install/"/>
    <updated>2014-04-28T09:00:00+09:00</updated>
    <id>http://blog.abgata.org/blog/2014/04/28/webmin_install</id>
    <content type="html"><![CDATA[<h3>参考：</h3>

<ul>
<li><a href="http://www.server-world.info/query?os=CentOS_6&amp;p=webmin">Webminインストール</a></li>
</ul>

<h2>インストールに必要なパールモジュールをインストールする</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> yum -y install perl-Net-SSLeay</span></code></pre></td></tr></table></div></figure>

<h3>最新版を入手</h3>

<p><a href="http://download.webmin.com/download/yum/">公式サイト</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir /downloads
</span><span class='line'>cd /downloads
</span><span class='line'>
</span><span class='line'>wget http://download.webmin.com/download/yum/webmin-1.630-1.noarch.rpm
</span><span class='line'>
</span><span class='line'>rpm -Uvh webmin-1.630-1.noarch.rpm
</span><span class='line'>
</span><span class='line'># アクセス制限を掛ける場合
</span><span class='line'>cp /etc/webmin/miniserv.conf /etc/webmin/miniserv.conf.org
</span><span class='line'>vim /etc/webmin/miniserv.conf
</span><span class='line'>
</span><span class='line'>
</span><span class='line'> # 最終行：アクセス許可するIP追記
</span><span class='line'>allow=127.0.0.1 10.0.0.0/24</span></code></pre></td></tr></table></div></figure>

<h3>再起動</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>service webmin restart</span></code></pre></td></tr></table></div></figure>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SSLの設定]]></title>
    <link href="http://blog.abgata.org/blog/2014/04/28/ssl_settiong/"/>
    <updated>2014-04-28T09:00:00+09:00</updated>
    <id>http://blog.abgata.org/blog/2014/04/28/ssl_settiong</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># sslモジュールをインストール
</span><span class='line'>sudo yum -y install mod_ssl
</span><span class='line'>
</span><span class='line'>cp /etc/httpd/conf.d/ssl.conf /etc/httpd/conf.d/ssl.conf.org
</span><span class='line'>vim /etc/httpd/conf.d/ssl.conf
</span></code></pre></td></tr></table></div></figure>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SSL証明書の発行方法]]></title>
    <link href="http://blog.abgata.org/blog/2014/04/28/ssl_keyfile/"/>
    <updated>2014-04-28T09:00:00+09:00</updated>
    <id>http://blog.abgata.org/blog/2014/04/28/ssl_keyfile</id>
    <content type="html"><![CDATA[<h2>SSL証明書の発行</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /etc/pki/tls/certs
</span><span class='line'># 鍵ファイル作成用の乱数を発行
</span><span class='line'>openssl md5 * &gt; my_rand.dat
</span><span class='line'>
</span><span class='line'># 鍵ファイルを作成
</span><span class='line'>openssl genrsa -rand my_rand.dat -des3 2048 &gt; my_key.pem
</span><span class='line'>
</span><span class='line'># 鍵ファイル内にパスプレーズを埋め込む
</span><span class='line'>openssl rsa -in my_key.pem -out my_key.pem
</span><span class='line'>
</span><span class='line'># ssl認証局提出用のcsrファイルを作成※このままでは使えません
</span><span class='line'>openssl req -new -key my_key.pem -out my_csr.pem
</span><span class='line'>
</span><span class='line'># オレオレ証明書を作成
</span><span class='line'>openssl req -new -x509 -days 3650 -key my_key.pem -out my_crt.pem
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>アクセス権変更
</span><span class='line'>chmod 400 my_key.pem
</span><span class='line'>chmod 400 my_crt.pem
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>vim /etc/httpd/conf.d/ssl.conf</span></code></pre></td></tr></table></div></figure>

<h5>/etc/httpd/conf.d/ssl.conf</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>SSLCertificateFile /etc/pki/tls/certs/my_crt.pem
</span><span class='line'>
</span><span class='line'>SSLCertificateKeyFile /etc/pki/tls/certs/my_key.pem
</span></code></pre></td></tr></table></div></figure>

<p>apacheを再起動して設定を反映</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>service httpd restart</span></code></pre></td></tr></table></div></figure>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sambaでネットワークフォルダを作成]]></title>
    <link href="http://blog.abgata.org/blog/2014/04/28/samba_setting/"/>
    <updated>2014-04-28T09:00:00+09:00</updated>
    <id>http://blog.abgata.org/blog/2014/04/28/samba_setting</id>
    <content type="html"><![CDATA[<h2>sambaをインストール</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>yum -y install samba system-config-samba samba-common samba-client</span></code></pre></td></tr></table></div></figure>

<h2>設定ファイルを変更</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cp /etc/samba/smb.conf /etc/samba/smb.conf.org
</span><span class='line'>vim /etc/samba/smb.conf</span></code></pre></td></tr></table></div></figure>

<h5>/etc/samba/smb.conf</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>;ワークグループ編集(windowsのものと同じにする。macは関係なし？)
</span><span class='line'>workgroup = workgroup
</span><span class='line'>
</span><span class='line'>;日本語設定
</span><span class='line'>unix charset = UTF-8
</span><span class='line'>dos charset = CP932
</span><span class='line'>display charset = UTF-8
</span><span class='line'>
</span><span class='line'>;受け付けるipを設定
</span><span class='line'>;127.で、127.xx.xx.xxを許可
</span><span class='line'>;hosts allow = 127.192.168.1など
</span><span class='line'>
</span><span class='line'>;パスワードをunixパスワードと同じに。
</span><span class='line'>unix password sync = yes
</span><span class='line'>load printers = no
</span><span class='line'>
</span><span class='line'>;ホームディレクトリの設定
</span><span class='line'>[homes]
</span><span class='line'>        comment = Home Directories
</span><span class='line'>        browseable = no
</span><span class='line'>        writable = yes
</span><span class='line'>        create mask = 0664
</span><span class='line'>        directory mask = 0755
</span><span class='line'>        create mode = 0775
</span><span class='line'>        directory mode = 0755
</span><span class='line'>      ;valid users = user1,user2,user3,user4,user5
</span><span class='line'>      share modes = yes
</span><span class='line'>          dos filetimes = yes
</span><span class='line'>
</span><span class='line'>;共通のpublicフォルダも設定
</span><span class='line'>[public]
</span><span class='line'>        comment = Public Stuff
</span><span class='line'>        path = /home/public
</span><span class='line'>        create mask = 0666
</span><span class='line'>        directory mask = 0755
</span><span class='line'>        guest only = no
</span><span class='line'>        guest ok = no
</span><span class='line'>        public = yes
</span><span class='line'>        writable = yes
</span><span class='line'>      share modes = yes
</span><span class='line'>          dos filetimes = yes
</span></code></pre></td></tr></table></div></figure>

<h2>sambaにユーザ追加</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>adduser myuser
</span><span class='line'>passwd myuser
</span><span class='line'>pdbedit -a -u myuser
</span><span class='line'>
</span><span class='line'>pdbedit -L</span></code></pre></td></tr></table></div></figure>

<h2>samba起動</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>service smb start
</span><span class='line'>service nmb start</span></code></pre></td></tr></table></div></figure>

<h3>問題なければ、自動起動に。</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>chkconfig smb on
</span><span class='line'>chkconfig nmb on</span></code></pre></td></tr></table></div></figure>

<h2>samba用にiptables編集(下記を追加)</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-A INPUT -p udp -m udp --dport 137:138 -j ACCEPT
</span><span class='line'>-A INPUT -p tcp -m tcp --dport 139 -j ACCEPT
</span><span class='line'>-A INPUT -p tcp -m tcp --dport 445 -j ACCEPT</span></code></pre></td></tr></table></div></figure>

<h2>iptables再起動</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>service iptables restart</span></code></pre></td></tr></table></div></figure>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[バックグラウンドでプログラムを実行]]></title>
    <link href="http://blog.abgata.org/blog/2014/04/28/run_background/"/>
    <updated>2014-04-28T09:00:00+09:00</updated>
    <id>http://blog.abgata.org/blog/2014/04/28/run_background</id>
    <content type="html"><![CDATA[<h2>バックグランドで実行</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nohup ruby sample.rb &</span></code></pre></td></tr></table></div></figure>

<h2>実行中のスクリプトを確認</h2>
<div class="highlight"><pre><code class="text">ps ax | grep ruby
</code></pre></div>
<h2>実行中のスクリプトを停止</h2>
<div class="highlight"><pre><code class="text">kill processid
</code></pre></div>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Railsをrunicornで起動]]></title>
    <link href="http://blog.abgata.org/blog/2014/04/28/rails_unicorn/"/>
    <updated>2014-04-28T09:00:00+09:00</updated>
    <id>http://blog.abgata.org/blog/2014/04/28/rails_unicorn</id>
    <content type="html"><![CDATA[<h2>起動</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>unicorn -c config/unicorn.rb -D</span></code></pre></td></tr></table></div></figure>

<h2>現在実行中のプロセスを探す</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ps ax | grep unicorn</span></code></pre></td></tr></table></div></figure>

<h2>停止</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>kill process_id</span></code></pre></td></tr></table></div></figure>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Railsでtaskを作成]]></title>
    <link href="http://blog.abgata.org/blog/2014/04/28/rails_task/"/>
    <updated>2014-04-28T09:00:00+09:00</updated>
    <id>http://blog.abgata.org/blog/2014/04/28/rails_task</id>
    <content type="html"><![CDATA[<h3>参考サイト</h3>

<ul>
<li><a href="http://qiita.com/mosson/items/9a9b0703ac4c76ebfd4e">Rakeタスクをつくる</a></li>
</ul>

<h2>タスクファイルの作成</h2>
<div class="highlight"><pre><code class="text">rails g task  task_name
</code></pre></div>
<p>lib/task/task_name.rake が作成される</p>

<h5>lib/task/task_name.rake</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>desc "Sample です" #=&gt; 説明
</span><span class='line'>task :sample =&gt; :environment do
</span><span class='line'>  print 'hello sample.'
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>

<h2>実行</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake task_name:sample</span></code></pre></td></tr></table></div></figure>

<h2>確認</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake -vT</span></code></pre></td></tr></table></div></figure>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Node.jsのデーモン化ツールpm2をインストール]]></title>
    <link href="http://blog.abgata.org/blog/2014/04/28/pm2_install/"/>
    <updated>2014-04-28T09:00:00+09:00</updated>
    <id>http://blog.abgata.org/blog/2014/04/28/pm2_install</id>
    <content type="html"><![CDATA[<h2>npmでグローバルにインストール</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>npm install -g pm2</span></code></pre></td></tr></table></div></figure>

<h2>スクリプトを登録</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pm2 start sample001.js</span></code></pre></td></tr></table></div></figure>

<h2>スクリプトを確認</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pm2 list</span></code></pre></td></tr></table></div></figure>

<h2>スクリプトを止める</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># listで確認して、appで登録されたスクリプトを止めたい場合
</span><span class='line'>pm2 stop app</span></code></pre></td></tr></table></div></figure>

<h2>ログを参照</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pm2 logs</span></code></pre></td></tr></table></div></figure>

<h2>モニタリング</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pm2 monit</span></code></pre></td></tr></table></div></figure>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[サーバーの初期設定]]></title>
    <link href="http://blog.abgata.org/blog/2014/04/28/linux_server_setting/"/>
    <updated>2014-04-28T09:00:00+09:00</updated>
    <id>http://blog.abgata.org/blog/2014/04/28/linux_server_setting</id>
    <content type="html"><![CDATA[<h2>yumを最新状態にする</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo yum update -y</span></code></pre></td></tr></table></div></figure>

<h2>使用言語を日本語に設定</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo cp /etc/sysconfig/i18n /etc/sysconfig/i18n.org
</span><span class='line'>sudo vim /etc/sysconfig/i18n</span></code></pre></td></tr></table></div></figure>

<h5>/etc/sysconfig/i18n</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>LANG="ja_JP.utf-8"
</span><span class='line'>
</span><span class='line'>SYSFONT="latarcyrheb-sun16"</span></code></pre></td></tr></table></div></figure>

<h2>サーバーに時間変更（日本時間）</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo mv /etc/localtime /etc/localtime.org
</span><span class='line'>sudo ln -s /usr/share/zoneinfo/Asia/Tokyo /etc/localtime</span></code></pre></td></tr></table></div></figure>

<p>再度ログインで日本語化(dateで確認)</p>

<h2>サーバーのホスト名を変更する</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo cp /etc/sysconfig/network /etc/sysconfig/network.org
</span><span class='line'>sudo vim /etc/sysconfig/network</span></code></pre></td></tr></table></div></figure>

<h5>/etc/sysconfig/network</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>NETWORKING=yes
</span><span class='line'>NETWORKING_IPV6=yes
</span><span class='line'>HOSTNAME=sample.abgata.org</span></code></pre></td></tr></table></div></figure>

<h2>hostsの設定</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo cp /etc/hosts /etc/hosts.org
</span><span class='line'>sudo vim /etc/hosts</span></code></pre></td></tr></table></div></figure>

<h5>/etc/hosts</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>127.0.0.1 sample.abgata.org localhost.localdomain
</span></code></pre></td></tr></table></div></figure>

<h3>設定後はネットワークを再起動</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo /etc/rc.d/init.d/network restart</span></code></pre></td></tr></table></div></figure>

<h2>ユーザーを追加</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>useradd myuser
</span><span class='line'>passwd myuser
</span><span class='line'>
</span><span class='line'>usermod -G wheel myuser</span></code></pre></td></tr></table></div></figure>

<h2>ユーザーにsudo権限を付与</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cp /etc/sudoers /etc/sudoers.org
</span><span class='line'>
</span><span class='line'>visudo</span></code></pre></td></tr></table></div></figure>

<h5>visudo</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># %wheel ~~
</span><span class='line'># ↓
</span><span class='line'>%wheel ~~</span></code></pre></td></tr></table></div></figure>

<p>※一番最初のもの</p>

<h2>sshの設定を変更</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cp /etc/ssh/sshd_config /etc/ssh/sshd_config.org
</span><span class='line'>
</span><span class='line'>vim /etc/ssh/sshd_config
</span></code></pre></td></tr></table></div></figure>

<h5>/etc/ssh/sshd_config</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Port YOUR_PORT_NUMBER
</span><span class='line'>PasswordAuthentication yes
</span><span class='line'>PermitRootLogin no
</span><span class='line'>PubkeyAuthentication yes</span></code></pre></td></tr></table></div></figure>

<h2>sshdを再起動して設定を反映</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>service sshd restart</span></code></pre></td></tr></table></div></figure>

<h2>SSH接続してみる</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh -p YOUR_PORT_NUMBER myuser@192.168.10.10</span></code></pre></td></tr></table></div></figure>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Iptablesの設定]]></title>
    <link href="http://blog.abgata.org/blog/2014/04/28/iptables/"/>
    <updated>2014-04-28T09:00:00+09:00</updated>
    <id>http://blog.abgata.org/blog/2014/04/28/iptables</id>
    <content type="html"><![CDATA[<h2>設定ファイルを作成</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vim /etc/sysconfig/iptables</span></code></pre></td></tr></table></div></figure>

<h5>/etc/sysconfig/iptables</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>*filter
</span><span class='line'>:INPUT    DROP    [0:0]
</span><span class='line'>:FORWARD  DROP    [0:0]
</span><span class='line'>:OUTPUT   ACCEPT  [0:0]
</span><span class='line'>:SERVICES -       [0:0]
</span><span class='line'>-A INPUT -i lo -j ACCEPT
</span><span class='line'>-A INPUT -p icmp --icmp-type echo-request -m limit --limit 1/s --limit-burst 4  -j ACCEPT
</span><span class='line'>-A INPUT -p tcp -m state --state ESTABLISHED,RELATED -j ACCEPT
</span><span class='line'>-A INPUT -p tcp -m state --state NEW -j SERVICES
</span><span class='line'>-A INPUT -p udp --sport 53 -j ACCEPT
</span><span class='line'>-A INPUT -p udp --sport 123 --dport 123 -j ACCEPT
</span><span class='line'>
</span><span class='line'>-A SERVICES -p tcp --dport 25 -j ACCEPT
</span><span class='line'>-A SERVICES -p tcp --dport 110 -j ACCEPT
</span><span class='line'>-A SERVICES -p tcp --dport 587 -j ACCEPT
</span><span class='line'>-A SERVICES -p tcp --dport 80 -j ACCEPT
</span><span class='line'>-A SERVICES -p tcp --dport 443 -j ACCEPT
</span><span class='line'>
</span><span class='line'>-A INPUT -p udp -m udp --dport 137:138 -j ACCEPT
</span><span class='line'>-A INPUT -p tcp -m tcp --dport 139 -j ACCEPT
</span><span class='line'>-A INPUT -p tcp -m tcp --dport 445 -j ACCEPT
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>COMMIT
</span></code></pre></td></tr></table></div></figure>

<h2>設定を反映</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>service iptables restart
</span><span class='line'>
</span><span class='line'>iptables -L
</span><span class='line'>
</span><span class='line'>chkconfig iptables on
</span><span class='line'>
</span><span class='line'>chkconfig --list iptables
</span></code></pre></td></tr></table></div></figure>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Node.jsをnodebrewでインストール]]></title>
    <link href="http://blog.abgata.org/blog/2014/04/28/install_from_nodebrew/"/>
    <updated>2014-04-28T09:00:00+09:00</updated>
    <id>http://blog.abgata.org/blog/2014/04/28/install_from_nodebrew</id>
    <content type="html"><![CDATA[<h2>nodebrewをインストール</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl https://raw.github.com/hokaccha/nodebrew/master/nodebrew | perl - setup
</span><span class='line'>
</span><span class='line'># ユーザーディレクトリにインストールされるので、全ユーザーで利用する場合はノードユーザー作ってインストールして共通パス通すのがいいかも
</span><span class='line'>
</span><span class='line'>useradd node
</span><span class='line'>
</span><span class='line'>cd /home/node
</span><span class='line'>
</span><span class='line'>chmod -R 777 /home/node
</span><span class='line'>
</span><span class='line'>echo 'export PATH="/home/node/.nodebrew/current/bin:$PATH"'     &gt;&gt; /etc/profile.d/nodebrew.sh
</span><span class='line'># echo 'export PATH="/home/node/.nodebrew/current/bin:$PATH"'     &gt;&gt; /etc/profile.d/nodebrew.sh
</span><span class='line'>
</span><span class='line'>source /etc/profile.d/nodebrew.sh
</span><span class='line'>
</span><span class='line'>echo $PATH
</span><span class='line'>
</span><span class='line'># ユーザー権限でも実行したい場合は実行グループ作って登録すれば大丈夫。</span></code></pre></td></tr></table></div></figure>

<h2>nodeグループを作成</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>groupadd node
</span><span class='line'>usermod -G wheel,node myuser
</span><span class='line'># usermod -G wheel,node,ruby myuser
</span><span class='line'>groups myuser</span></code></pre></td></tr></table></div></figure>

<h2>.nodebrewの所有グループを変更</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /home/node
</span><span class='line'>chgrp -R node .nodebrew
</span><span class='line'>chmod -R g+rwxX .nodebrew</span></code></pre></td></tr></table></div></figure>

<h2>/home/nodeへの閲覧権限がなかったのでグループをwheelに変更</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo chgrp wheel /root</span></code></pre></td></tr></table></div></figure>

<h2>インストール可能なバージョンの確認</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nodebrew ls-all
</span><span class='line'># 奇数バージョンは開発版、偶数バージョンが安定版らしい</span></code></pre></td></tr></table></div></figure>

<h2>インストール(バイナリからインストールしたほうが速い)</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nodebrew install-binary v0.10.20
</span><span class='line'># インストールはユーザーディレクトリにされるっぽいのでノードユーザーでインストールする</span></code></pre></td></tr></table></div></figure>

<h2>利用するバージョンを変更</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nodebrew use v0.10.20</span></code></pre></td></tr></table></div></figure>

<h2>現在のバージョンを確認</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>node -v</span></code></pre></td></tr></table></div></figure>

<h2>サーバーサンプル</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>var http = require('http');
</span><span class='line'>
</span><span class='line'>http.createServer(function (request, response) {
</span><span class='line'>  response.writeHead(200, {'Content-Type': 'text/plain'});
</span><span class='line'>  response.end('Hello Node.js');
</span><span class='line'>}).listen(8124);
</span><span class='line'>
</span><span class='line'>console.log('Server running at http://localhost:8124');</span></code></pre></td></tr></table></div></figure>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Grape を Rails4で利用する場合の注意点]]></title>
    <link href="http://blog.abgata.org/blog/2014/04/28/grape_on_rails/"/>
    <updated>2014-04-28T09:00:00+09:00</updated>
    <id>http://blog.abgata.org/blog/2014/04/28/grape_on_rails</id>
    <content type="html"><![CDATA[<h3>参考サイト</h3>

<ul>
<li><a href="http://lemonade.hatenablog.jp/entry/2013/11/28/031126">grape on railsしてみる</a></li>
</ul>

<p>なんかいろいろとはまってしまったので備忘録</p>

<p>file pathを追加する</p>

<h5>config/application.rb</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>module TestApp
</span><span class='line'>  class Application &lt; Rails::Application
</span><span class='line'>    ...
</span><span class='line'>    config.paths.add "app/api", glob: "**/*.rb"
</span><span class='line'>    config.autoload_paths += Dir["#{Rails.root}/app/api/*"]
</span><span class='line'>    ...
</span><span class='line'>  end
</span><span class='line'>end
</span><span class='line'>routes.rbにmountするコードを一行追加
</span><span class='line'>
</span><span class='line'>TestApp::Application.routes.draw do
</span><span class='line'>  mount TestAPI =&gt; 'api'
</span><span class='line'>  ...
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>

<h3>流れ</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rails new test-app
</span><span class='line'>$ cd test-app
</span><span class='line'>$ vi Gemfile
</span><span class='line'># + gem 'grape', :git =&gt; "https://github.com/intridea/grape.git"
</span><span class='line'>$ bundle install
</span><span class='line'>$ mkdir app/api
</span><span class='line'>$ vi app/api/test_api.rb
</span><span class='line'>$ vi app/api/api_v1.rb
</span><span class='line'>$ mkdir app/api/v1
</span><span class='line'>$ vi app/api/ping.rb
</span><span class='line'>$ vi config/application.rb
</span><span class='line'>$ vi config/routes.rb
</span><span class='line'>$ bundle exec rails s
</span><span class='line'>$ open http://localhost:3000/api/v1/hello
</span><span class='line'>files</span></code></pre></td></tr></table></div></figure>

<h5>app/api/test_api.rb</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class TestAPI &lt; Grape::API
</span><span class='line'>  mount API_V1
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>

<h5>app/api/api_v1.rb</h5>

<p>v1/以下のclassをmountする</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class API_V1 &lt; Grape::API
</span><span class='line'>  prefix 'v1' # とりあえずprefixだけつけている
</span><span class='line'>  mount V1::Ping
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>

<h5>app/api/v1/ping.rb</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>module V1
</span><span class='line'>  class Ping &lt; Grape::API
</span><span class='line'>    format :json
</span><span class='line'>
</span><span class='line'>    get :hello do
</span><span class='line'>      {hello: "world"}
</span><span class='line'>    end
</span><span class='line'>  end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>

<p>ベースのクラスをモジュールで囲うと何故かサブクラス呼び出せない</p>

<p>不思議だ。</p>

<p>要調査</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Node.jsのデーモン化ツールforeverをインストール]]></title>
    <link href="http://blog.abgata.org/blog/2014/04/28/forever_install/"/>
    <updated>2014-04-28T09:00:00+09:00</updated>
    <id>http://blog.abgata.org/blog/2014/04/28/forever_install</id>
    <content type="html"><![CDATA[<h2>npmでグローバルにインストール</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>npm install -g forever</span></code></pre></td></tr></table></div></figure>

<h2>スクリプトを登録</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>forever start sample001.js</span></code></pre></td></tr></table></div></figure>

<h2>スクリプトを確認</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>forever list</span></code></pre></td></tr></table></div></figure>

<h2>スクリプトを止める</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># listで確認して、[0]で登録されたスクリプトを止めたい場合
</span><span class='line'>forever stop 0</span></code></pre></td></tr></table></div></figure>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[フォルダを圧縮して自動バックアップするスクリプト]]></title>
    <link href="http://blog.abgata.org/blog/2014/04/28/folder_backup/"/>
    <updated>2014-04-28T09:00:00+09:00</updated>
    <id>http://blog.abgata.org/blog/2014/04/28/folder_backup</id>
    <content type="html"><![CDATA[<h2>シェルスクリプトを作成</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vim images_backup.sh</span></code></pre></td></tr></table></div></figure>

<h5>images_backup.sh</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/bin/sh
</span><span class='line'>
</span><span class='line'># バックアップファイルを何日分残しておくか
</span><span class='line'>period='+7'
</span><span class='line'># バックアップファイルを保存するディレクトリ
</span><span class='line'>dirpath='/path/to/backup/images'
</span><span class='line'>
</span><span class='line'>#バックアップ元フォルダ
</span><span class='line'>backupfolder="/path/to/from"
</span><span class='line'>
</span><span class='line'># ファイル名を定義(※ファイル名で日付がわかるようにしておきます)
</span><span class='line'>mydate=`date +%y%m%d%H%M%S`
</span><span class='line'>filename="images_$mydate.tar.gz"
</span><span class='line'>#backup実行
</span><span class='line'>tar -zcvf $dirpath/$filename $backupfolder
</span><span class='line'>
</span><span class='line'># パーミッション変更
</span><span class='line'>chmod 700 $dirpath/$filename
</span><span class='line'>
</span><span class='line'># 古いバックアップファイルを削除
</span><span class='line'>find $dirpath -type f -daystart -mtime $period -exec rm {} \;</span></code></pre></td></tr></table></div></figure>

<h2>権限設定の変更</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>chmod 700 images_backup.sh</span></code></pre></td></tr></table></div></figure>
]]></content>
  </entry>
  
</feed>
